<script>
    $('.basic-slider').slick({
        dots: false,
        infinite: false,
        speed: 300,
        slidesToShow: 3,
        slidesToScroll: 3,
        responsive: [
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 3,
                    slidesToScroll: 3,
                    infinite: false,
                    dots: false
                }
            },
            {
                breakpoint: 600,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 2
                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }
            // You can unslick at a given breakpoint now by adding:
            // settings: "unslick"
            // instead of a settings object
        ]
    });
</script>

<script>
    tinymce.init({
        selector: '#editor',
        height: 500,
        menubar: false,
        plugins: [
            'advlist autolink lists link image charmap print preview anchor',
            'searchreplace visualblocks code fullscreen',
            'insertdatetime media table paste code help wordcount'
        ],
        toolbar: 'undo redo | formatselect link media | ' +
            'bold italic backcolor | alignleft aligncenter ' +
            'alignright alignjustify | bullist numlist outdent indent',
    });

    $("#file-upload").css("opacity", "0");

    $("#file-browser").click(function (e) {
        e.preventDefault();
        $("#file-upload").trigger("click");
    });
</script>

<script>
    //Order Membership Script
    $('#receipt').on('show.bs.modal', function (e) {
        let tombol = $(e.relatedTarget);
        let alamatGambar = tombol.data('src');
        let modal = $(this);
        let idVerif = tombol.data('id');
        modal.find('.modal-body img').attr('src', '/' + alamatGambar);
        modal.find('#tombolVerif').data('id', idVerif);
        modal.find("#receiptLabel").text('Bukti bayar ' + tombol.data('name'));
        modal.find('#formVerif').attr('action', `/verifikasi/${idVerif}`)
        modal.find("#_id").text(idVerif);
        console.log(modal.find('#formVerif').attr('action'));
    });

    $("#modalSuksesVerif").modal('show');

    //Order membership Premium
    $('#premiumButton').on('click', function (e) {
        $(this).attr('disabled', 'disabled');
        e.preventDefault();
        const API = `/membership/api/order`;
        axios({
            method: "POST",
            url: API,
            data: {
                paket: 'Premium',
            },
        })
            .then((res) => {
                Swal.fire({
                    icon: "success",
                    title: "Order Berhasil!",
                    text: 'Silahkan cek email untuk melihat detail order',
                }).then((result) => {
                    if (result.isConfirmed) {
                        location.reload();
                    }
                });
            })
            .catch((err) => {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: err,
                    footer: "<a href>Silahkan coba kembali nanti</a>",
                });
            });
    });

    //Upload Bukti Bayar basic
    //Validation
    $('#buktiBayar').on('change', function (e) {
        let fileType = ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'];
        let file = this.files[0];
        if (file.size > 1048576) {
            Swal.fire({
                icon: "warning",
                title: "Oops...",
                text: 'Ukuran gambar maksimal 1MB!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#submit-basic').attr('disabled', 'disabled');
                }
            });
        } else {
            $('#submit-basic').removeAttr('disabled');
        }
        if (!fileType.includes(file.type)) {
            Swal.fire({
                icon: "warning",
                title: "Oops...",
                text: 'File harus berupa gambar/PDF!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#submit-basic').attr('disabled', 'disabled');
                }
            });
        } else {
            $('#submit-basic').removeAttr('disabled');
        }
    })

    //Reset komisi
    $('#resetKomisi').on('click', function (e) {
        e.preventDefault();
        let idUser = $(this).data('id');
        console.log(idUser)
        const API = `/commission/${idUser}/reset`;
        axios({
            method: "POST",
            url: API,
        })
            .then((res) => {
                Swal.fire({
                    icon: "success",
                    title: "Berhasil reset komisi",
                    text: 'Rincian komisi berhasil dikirim!',
                }).then((result) => {
                    if (result.isConfirmed) {
                        location.reload();
                    }
                });
            })
            .catch((err) => {
                console.log(err)
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: err.message,
                    footer: "<a href>Silahkan coba kembali nanti</a>",
                });
            });
    })

    //onload hide element
    const previous = $('#toolsCategory').val();
    $('#toolsCategory').on('change', function (e) {
        let current = $(this).val();
        console.log(current);
        if (previous != 'photo' && current == 'photo') {
            window.location.href = '/tool/photo/add';
        } else if (previous == 'photo' && current != 'photo') {
            window.location.href = '/tool/add';
        }
    });
</script>